{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"GraphQL-IO Project documentation with Markdown. Overview Neuer Textq","title":"Home"},{"location":"#graphql-io","text":"Project documentation with Markdown.","title":"GraphQL-IO"},{"location":"#overview","text":"Neuer Textq","title":"Overview"},{"location":"developer-guide/deploy/","text":"Deployment Information Maven Central Group ID: com.graphqlio PGP Signature Key: tbd Local location: %USER_HOME%/.gnupg Maven Settings.xml Local location: %USER_HOME%/.m2 Contains information about maven central server access and pgp signature pom.xml Every pom.xml from every GraphQL IO project is usable as template (e.g. pure-uuid ). Noteable content: - org.sonatype.plugins - Deploy profile: Compiles, builds JavaDoc and signs the artefacts - DistributionManagement: Defines repositories for release artefacts - SCM: Connection infos for source code VCS (github repository) Commands Local deploy: mvn clean deploy -P deploy Github GithubAction: We use Github Actions for auto deployment. The deployment will be triggered when a tag is pushed. Every GraphQL IO project contains this Github action and can be used as template. Note: Secrets have to be set for the actions. - GPG_PASSPHRASE - GPG_PRIVATE_KEY - NEXUS_USERNAME - NEXUS_PASSWORD","title":"Deployment"},{"location":"developer-guide/deploy/#deployment-information","text":"","title":"Deployment Information"},{"location":"developer-guide/deploy/#maven-central","text":"Group ID: com.graphqlio","title":"Maven Central"},{"location":"developer-guide/deploy/#pgp","text":"Signature Key: tbd Local location: %USER_HOME%/.gnupg","title":"PGP"},{"location":"developer-guide/deploy/#maven","text":"Settings.xml Local location: %USER_HOME%/.m2 Contains information about maven central server access and pgp signature pom.xml Every pom.xml from every GraphQL IO project is usable as template (e.g. pure-uuid ). Noteable content: - org.sonatype.plugins - Deploy profile: Compiles, builds JavaDoc and signs the artefacts - DistributionManagement: Defines repositories for release artefacts - SCM: Connection infos for source code VCS (github repository) Commands Local deploy: mvn clean deploy -P deploy","title":"Maven"},{"location":"developer-guide/deploy/#github","text":"GithubAction: We use Github Actions for auto deployment. The deployment will be triggered when a tag is pushed. Every GraphQL IO project contains this Github action and can be used as template. Note: Secrets have to be set for the actions. - GPG_PASSPHRASE - GPG_PRIVATE_KEY - NEXUS_USERNAME - NEXUS_PASSWORD","title":"Github"},{"location":"user-guide/start/","text":"Start Guide to all available configuration settings. site_name public class Test { }","title":"Writing Your Docs"},{"location":"user-guide/start/#start","text":"Guide to all available configuration settings.","title":"Start"},{"location":"user-guide/start/#site_name","text":"public class Test { }","title":"site_name"}]}